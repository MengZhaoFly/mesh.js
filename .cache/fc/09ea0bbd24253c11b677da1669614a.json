{"id":"../src/utils/parse-color.js","dependencies":[{"name":"/Users/bytedance/Downloads/pre-work/mesh.js/.babelrc","includedInParent":true,"mtime":1623934807951},{"name":"/Users/bytedance/Downloads/pre-work/mesh.js/package.json","includedInParent":true,"mtime":1623935384483},{"name":"gl-matrix","parent":"/Users/bytedance/Downloads/pre-work/mesh.js/src/utils/parse-color.js","resolved":"/Users/bytedance/Downloads/pre-work/mesh.js/node_modules/gl-matrix/esm/index.js"},{"name":"color-rgba","loc":{"line":2,"column":17},"parent":"/Users/bytedance/Downloads/pre-work/mesh.js/src/utils/parse-color.js","resolved":"/Users/bytedance/Downloads/pre-work/mesh.js/node_modules/color-rgba/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseColor;\n\nvar _colorRgba = _interopRequireDefault(require(\"color-rgba\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"gl-matrix\").glMatrix.setMatrixArrayType(Array);\n\nfunction parseColor(colorStr) {\n  var ret = (0, _colorRgba.default)(colorStr);\n  if (!ret || !ret.length) throw new TypeError('Invalid color value.');\n  return [ret[0] / 255, ret[1] / 255, ret[2] / 255, ret[3]];\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../src/utils/parse-color.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../src/utils/parse-color.js","original":{"line":4,"column":15}},{"name":"parseColor","generated":{"line":14,"column":9},"source":"../src/utils/parse-color.js","original":{"line":4,"column":24}},{"generated":{"line":14,"column":19},"source":"../src/utils/parse-color.js","original":{"line":4,"column":15}},{"name":"colorStr","generated":{"line":14,"column":20},"source":"../src/utils/parse-color.js","original":{"line":4,"column":35}},{"generated":{"line":14,"column":28},"source":"../src/utils/parse-color.js","original":{"line":4,"column":15}},{"generated":{"line":14,"column":30},"source":"../src/utils/parse-color.js","original":{"line":4,"column":45}},{"generated":{"line":15,"column":0},"source":"../src/utils/parse-color.js","original":{"line":5,"column":2}},{"name":"ret","generated":{"line":15,"column":6},"source":"../src/utils/parse-color.js","original":{"line":5,"column":8}},{"generated":{"line":15,"column":9},"source":"../src/utils/parse-color.js","original":{"line":5,"column":11}},{"generated":{"line":15,"column":12},"source":"../src/utils/parse-color.js","original":{"line":5,"column":14}},{"name":"colorStr","generated":{"line":15,"column":36},"source":"../src/utils/parse-color.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":44},"source":"../src/utils/parse-color.js","original":{"line":5,"column":14}},{"generated":{"line":15,"column":45},"source":"../src/utils/parse-color.js","original":{"line":5,"column":2}},{"generated":{"line":16,"column":0},"source":"../src/utils/parse-color.js","original":{"line":6,"column":2}},{"generated":{"line":16,"column":6},"source":"../src/utils/parse-color.js","original":{"line":6,"column":5}},{"name":"ret","generated":{"line":16,"column":7},"source":"../src/utils/parse-color.js","original":{"line":6,"column":6}},{"generated":{"line":16,"column":10},"source":"../src/utils/parse-color.js","original":{"line":6,"column":5}},{"generated":{"line":16,"column":14},"source":"../src/utils/parse-color.js","original":{"line":6,"column":13}},{"name":"ret","generated":{"line":16,"column":15},"source":"../src/utils/parse-color.js","original":{"line":6,"column":14}},{"generated":{"line":16,"column":18},"source":"../src/utils/parse-color.js","original":{"line":6,"column":17}},{"name":"length","generated":{"line":16,"column":19},"source":"../src/utils/parse-color.js","original":{"line":6,"column":18}},{"generated":{"line":16,"column":25},"source":"../src/utils/parse-color.js","original":{"line":6,"column":2}},{"generated":{"line":16,"column":27},"source":"../src/utils/parse-color.js","original":{"line":6,"column":26}},{"generated":{"line":16,"column":33},"source":"../src/utils/parse-color.js","original":{"line":6,"column":32}},{"name":"TypeError","generated":{"line":16,"column":37},"source":"../src/utils/parse-color.js","original":{"line":6,"column":36}},{"generated":{"line":16,"column":46},"source":"../src/utils/parse-color.js","original":{"line":6,"column":32}},{"generated":{"line":16,"column":47},"source":"../src/utils/parse-color.js","original":{"line":6,"column":46}},{"generated":{"line":16,"column":69},"source":"../src/utils/parse-color.js","original":{"line":6,"column":32}},{"generated":{"line":16,"column":70},"source":"../src/utils/parse-color.js","original":{"line":6,"column":26}},{"generated":{"line":17,"column":0},"source":"../src/utils/parse-color.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":9},"source":"../src/utils/parse-color.js","original":{"line":7,"column":9}},{"name":"ret","generated":{"line":17,"column":10},"source":"../src/utils/parse-color.js","original":{"line":7,"column":10}},{"generated":{"line":17,"column":13},"source":"../src/utils/parse-color.js","original":{"line":7,"column":13}},{"generated":{"line":17,"column":14},"source":"../src/utils/parse-color.js","original":{"line":7,"column":14}},{"generated":{"line":17,"column":15},"source":"../src/utils/parse-color.js","original":{"line":7,"column":13}},{"generated":{"line":17,"column":16},"source":"../src/utils/parse-color.js","original":{"line":7,"column":10}},{"generated":{"line":17,"column":19},"source":"../src/utils/parse-color.js","original":{"line":7,"column":19}},{"generated":{"line":17,"column":22},"source":"../src/utils/parse-color.js","original":{"line":7,"column":9}},{"name":"ret","generated":{"line":17,"column":24},"source":"../src/utils/parse-color.js","original":{"line":7,"column":24}},{"generated":{"line":17,"column":27},"source":"../src/utils/parse-color.js","original":{"line":7,"column":27}},{"generated":{"line":17,"column":28},"source":"../src/utils/parse-color.js","original":{"line":7,"column":28}},{"generated":{"line":17,"column":29},"source":"../src/utils/parse-color.js","original":{"line":7,"column":27}},{"generated":{"line":17,"column":30},"source":"../src/utils/parse-color.js","original":{"line":7,"column":24}},{"generated":{"line":17,"column":33},"source":"../src/utils/parse-color.js","original":{"line":7,"column":33}},{"generated":{"line":17,"column":36},"source":"../src/utils/parse-color.js","original":{"line":7,"column":9}},{"name":"ret","generated":{"line":17,"column":38},"source":"../src/utils/parse-color.js","original":{"line":7,"column":38}},{"generated":{"line":17,"column":41},"source":"../src/utils/parse-color.js","original":{"line":7,"column":41}},{"generated":{"line":17,"column":42},"source":"../src/utils/parse-color.js","original":{"line":7,"column":42}},{"generated":{"line":17,"column":43},"source":"../src/utils/parse-color.js","original":{"line":7,"column":41}},{"generated":{"line":17,"column":44},"source":"../src/utils/parse-color.js","original":{"line":7,"column":38}},{"generated":{"line":17,"column":47},"source":"../src/utils/parse-color.js","original":{"line":7,"column":47}},{"generated":{"line":17,"column":50},"source":"../src/utils/parse-color.js","original":{"line":7,"column":9}},{"name":"ret","generated":{"line":17,"column":52},"source":"../src/utils/parse-color.js","original":{"line":7,"column":52}},{"generated":{"line":17,"column":55},"source":"../src/utils/parse-color.js","original":{"line":7,"column":55}},{"generated":{"line":17,"column":56},"source":"../src/utils/parse-color.js","original":{"line":7,"column":56}},{"generated":{"line":17,"column":57},"source":"../src/utils/parse-color.js","original":{"line":7,"column":55}},{"generated":{"line":17,"column":58},"source":"../src/utils/parse-color.js","original":{"line":7,"column":9}},{"generated":{"line":17,"column":59},"source":"../src/utils/parse-color.js","original":{"line":7,"column":2}},{"generated":{"line":18,"column":0},"source":"../src/utils/parse-color.js","original":{"line":8,"column":1}}],"sources":{"../src/utils/parse-color.js":"\nimport rgba from 'color-rgba';\n\nexport default function parseColor(colorStr) {\n  const ret = rgba(colorStr);\n  if(!ret || !ret.length) throw new TypeError('Invalid color value.');\n  return [ret[0] / 255, ret[1] / 255, ret[2] / 255, ret[3]];\n}\n"},"lineCount":null}},"error":null,"hash":"4dfb920eb62e883ef13ca70e9dee571c","cacheData":{"env":{}}}